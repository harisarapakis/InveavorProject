// <auto-generated />
using System;
using CoreInde.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreInde.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210308190602_Many-to-Many")]
    partial class ManytoMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreInde.Models.EmpSkills", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("EmpSkills");
                });

            modelBuilder.Entity("CoreInde.Models.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CoreInde.Models.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfSkillCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("CoreInde.Models.EmpSkills", b =>
                {
                    b.HasOne("CoreInde.Models.Employees", "Employees")
                        .WithMany("EmpSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreInde.Models.Skills", "Skills")
                        .WithMany("EmpSkills")
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("CoreInde.Models.Skills", b =>
                {
                    b.HasOne("CoreInde.Models.Employees", null)
                        .WithMany("Skillset")
                        .HasForeignKey("EmployeesId");
                });

            modelBuilder.Entity("CoreInde.Models.Employees", b =>
                {
                    b.Navigation("EmpSkills");

                    b.Navigation("Skillset");
                });

            modelBuilder.Entity("CoreInde.Models.Skills", b =>
                {
                    b.Navigation("EmpSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
